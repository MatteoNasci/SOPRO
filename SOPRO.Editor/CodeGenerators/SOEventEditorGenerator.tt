<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#
string args = string.Empty;
for(int x = 0; x < AllValidTypes.Length ; x++)
{
	args = args + "obj.DEBUG_" + AllValidTypes[x] + "_" + x;
	if(x != AllValidTypes.Length - 1)
	{
		args = args + " ,";
	}
}
#>
using UnityEngine;
using UnityEditor;
<# if(Namespace != null && Namespace.Length > 0)
{ #>
namespace <#= Namespace #>
{
<# } #>
    /// <summary>
    /// Class that modifies SOEvent inspector view
    /// </summary>
    [CustomEditor(typeof(<#= SOEventTypeName #>))]
    public class <#= ClassName #> : UnityEditor.Editor
    {
		private <#= SOEventTypeName #> obj;
        /// <summary>
        /// Method that modifies SOEvent inspector view
        /// </summary>
        public override void OnInspectorGUI()
        {
            base.OnInspectorGUI();

            GUI.enabled = Application.isPlaying;

            if (GUILayout.Button("Raise"))
                obj.Raise(<#= args #>);
        }
		void OnEnable()
		{
			this.obj = target as <#= SOEventTypeName #>;
		}
    }
<# if(Namespace != null && Namespace.Length > 0)
{ #>
}
<# } #>
<#+
public string Namespace { get; set; }
public string[] AllValidTypes { get; set; }
public string SOEventTypeName { get; set; }
public string ClassName { get; set; }
#>